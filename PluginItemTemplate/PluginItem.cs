// this file was generated by the xRM Test Framework VS Extension

#region Imports

using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata.Query;
using Microsoft.Xrm.Sdk.Query;
using LinkDev.Libraries.Common;

#endregion

namespace $rootnamespace$
{
	/// <summary>
	///     This plugin ... .<br />
	///     Version: 0.1.1
	/// </summary>
	public class $safeitemrootname$ : IPlugin
	{
		public void Execute(IServiceProvider serviceProvider)
		{
			////var context = (IPluginExecutionContext)serviceProvider.GetService(typeof(IPluginExecutionContext));
			new $safeitemrootname$Logic().Execute(this, serviceProvider, PluginUser.System);
		}
	}

	internal class $safeitemrootname$Logic : PluginLogic<$safeitemrootname$>
	{
		public $safeitemrootname$Logic() : base("Create", PluginStage.PreOperation, "account")
		{ }

		////protected override bool IsContextValid()
		////{
		////	

		////	return true;
		////}
		
		protected override void ExecuteLogic()
		{
			// get the triggering record
			////var target = (Entity)context.InputParameters["Target"];
			////var typedTarget = target.ToEntity<Entity>();

			////LinkDev.Libraries.Common.CrmHelpers.LogAttributeValues(target.Attributes, target, log);

			// plugin logic ...

		}
	}
}
